#!/usr/bin/env python

import sys
import json
import pytz
import struct
import requests
import dateutil.parser
from pprint import pprint
from datetime import datetime

# parses RawPoint to Point and inserts the data to Django using REST API call

def insert_into_django(point):
    print("Sending this to Django: ")
    pprint(point)
    r = requests.post('http://lorawan.sk:8000/api/points/save/', data = json.dumps(point))
    pprint(r.content)
    pprint(r.status_code)
    return

r = requests.get('http://lorawan.sk:8000/api/rawpoints/?limit=500&state=0')

out = {
        'points': [],
      }

for rawpoint in r.json()['dataset']:
    node = rawpoint['node']
    for key in rawpoint['node']['keys']:
        if node['nodetype'] == "SCORIA_ATMEGA328 rev2 DS18B20 + PT100":
            pprint(rawpoint)
            try:
                # temperature
                if key['numeric'] == 67:
                    value = round(struct.unpack('>h', rawpoint['payload'][4:8].decode('hex'))[0] / 16.0, 2)
                # battery
                elif key['numeric'] == 93:
                    value = int(struct.unpack('<B', rawpoint['payload'][2:4].decode('hex'))[0])
                elif key['numeric'] == 95:
                    value = round(struct.unpack('>h', rawpoint['payload'][8:12].decode('hex'))[0] / 16.0, 2)
                else:
                    print("Dont know how to parse this numeric key: " + str(key['numeric']) + "....skipping")
                    continue
            except Exception as e:
                print(str(e))
                continue
            out['points'].append({
                                   'node_id': node['node_id'],
                                   'key': key['numeric'],
                                   'value': value,
                                   'gw_mac': rawpoint['gw_mac'],
                                   'rssi': rawpoint['rssi'],
                                   'snr': rawpoint['snr'],
                                   'timestamp': rawpoint['datetime'],
                                   'rawpoint_id': rawpoint['rawpoint_id'],
                                 })
pprint(out)
for point in out['points']:
    insert_into_django(point)
